swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
    tags:
      - User Module
    summary: User Profile API
    description: API for fetching a user profile. Requires authentication via HTTP-only cookie.
    produces:
      - application/json
    responses:
      '200':
        description: User profile retrieved successfully
        schema:
          $ref: '#/definitions/UserProfileResponse'
      '401':
        description: Unauthorized
      '500':
        description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  # additional paths
  /account/generateAccount:
    post:
      tags:
        - Account Module
      summary: Generate an account
      description: API for creating an account
      parameters:
        - in: body
          name: body
          description: Payload for account creation
          required: true
          schema:
            $ref: '#/definitions/CreateAccount'
      produces:
        - application/json
      responses:
        '200':
          description: Account created successfully
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /account/getAccounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Get user's accounts
      description: API for fetching a user's accounts
      produces:
        - application/json
      responses:
        '200':
          description: Accounts retrieved successfully
          schema:
            $ref: '#/definitions/GetAccounts'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /account/updateTransactionDetail:
    put:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Update transaction details
      description: API for updating transaction details
      parameters:
        - in: body
          name: body
          description: Payload for updating transaction details
          required: true
          schema:
            $ref: '#/definitions/UpdateTransactionDetail'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

securityDefinitions:
  Bearer:
    type: apiKey
    name: userToken
    in: cookie
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  # additional defs
  UserProfileResponse:
    type: object
    properties:
      body:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          userName:
            type: string
          email:
            type: string
  Account:
    type: object
    properties:
      accountNumber:
        type: string
        description: Account number
      accountBalance:
        type: number
        description: Balance of the account
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      date:
        type: string
        description: Date of the transaction
      transactionAmount:
        type: number
        description: Amount of the transaction
      balanceAfterTransaction:
        type: number
        description: Account balance after the transaction
      transactionType:
        type: string
        description: transaction type
      transactionCategory:
        type: string
        description: transaction Category
      transactionNote:
        type: string
        description: transaction Note
  CreateAccount:
    type: object
    properties:
      accountDetails:
        $ref: '#/definitions/Account'
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  GetAccounts:
    type: array
    items:
      $ref: '#/definitions/Account'
  UpdateTransactionDetail:
    type: object
    properties:
      transactionCategory:
        type: string
        description: transaction Category to update
      transactionNote:
        type: string
        description: transaction Note to update
